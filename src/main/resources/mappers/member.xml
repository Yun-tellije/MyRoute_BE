<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.ws.model.dao.MemberDao">
	<!-- 회원 등록 -->
	<insert id="memberRegister" parameterType="Member">
		INSERT INTO MEMBER
		(NAME, EMAIL, ID, PASSWORD, PNUMBER, ROLE, PROFILE_IMAGE)
		VALUES
		(#{name}, #{email},
		#{id}, #{password}, #{pnumber}, #{role},
		#{profileImage})
	</insert>

	<!-- 내 정보 조회 -->
	<select id="findById" resultMap="memberResultMap">
		SELECT ID, NAME, EMAIL,
		PASSWORD, PNUMBER, ROLE, PROFILE_IMAGE
		FROM MEMBER
		WHERE ID = #{id}
	</select>

	<!-- 내 정보 변경 -->
	<update id="updateMemberInfo">
		UPDATE member
		SET name = #{member.name},
		email =
		#{member.email},
		pnumber = #{member.pnumber}
		WHERE id = #{id}
	</update>

	<!-- 내 프로필 이미지 변경 -->
	<update id="updateProfileImage">
		UPDATE member
		SET profile_image = #{image}
		WHERE id =
		#{id}
	</update>

	<!-- 내 프로필 이미지 조회 -->
	<select id="findProfileImageById" resultType="byte[]">
		SELECT
		profile_image
		FROM member
		WHERE id = #{id}
	</select>

	<!-- 비밀번호 변경 -->
	<update id="updatePassword">
		UPDATE MEMBER
		SET PASSWORD = #{password}
		WHERE ID =
		#{id}
	</update>

	<delete id="deleteMember">
		DELETE FROM member
		WHERE id = #{id}
	</delete>
	
	<delete id="deletePlanLikesByUserId">
		delete from plan_likes where member_id = #{userId}
	</delete>
	
	<delete id="deletePlaceLikesByUserId">
		delete from hotplace_likes where member_id = #{userId}
	</delete>
	
	<delete id="deleteCommentsByUserId">
		delete from comment where member_id = #{userId}
	</delete>
	
	<delete id="deletefavoriteplacesByUserId">
		delete from favorite_place where member_id = #{userId}
	</delete>
	
	<delete id="deleteNotification">
		DELETE FROM notification
		WHERE notification_id = #{id}
	</delete>

	<delete id="clearNotification">
		DELETE FROM notification
		WHERE member_id = #{memberId}
	</delete>

	<resultMap id="memberResultMap"
		type="com.ssafy.ws.model.dto.Member">
		<result property="id" column="ID" />
		<result property="name" column="NAME" />
		<result property="email" column="EMAIL" />
		<result property="password" column="PASSWORD" />
		<result property="pnumber" column="PNUMBER" />
		<result property="role" column="ROLE" />
		<result property="profileImage" column="PROFILE_IMAGE" />
	</resultMap>

	<resultMap id="NotificationResultMap" type="com.ssafy.ws.model.dto.Notification">
    <id property="notificationId" column="notification_id"/>
    <result property="memberId" column="member_id"/>
    <result property="content" column="content"/>
    <result property="url" column="url"/>
    <result property="isRead" column="is_read"/>
    <result property="createdAt" column="created_at"/>
  </resultMap>

  <select id="getNotifications" resultMap="NotificationResultMap">
    SELECT * FROM notification
    WHERE member_id = #{memberId}
    ORDER BY created_at DESC
  </select>

  <update id="markAsRead">
    UPDATE notification
    SET is_read = 1
    WHERE notification_id = #{notificationId}
  </update>
</mapper>
